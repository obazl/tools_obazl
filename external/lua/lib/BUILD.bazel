cc_library(
    name = "lua",
    srcs = [
        "@lua//:src/lapi.c",
        "@lua//:src/lapi.h",
        "@lua//:src/lauxlib.c",
        "@lua//:src/lauxlib.h",
        "@lua//:src/lbaselib.c",
        "@lua//:src/lcode.c",
        "@lua//:src/lcode.h",
        "@lua//:src/lcorolib.c",
        "@lua//:src/lctype.c",
        "@lua//:src/lctype.h",
        "@lua//:src/ldblib.c",
        "@lua//:src/ldebug.c",
        "@lua//:src/ldebug.h",
        "@lua//:src/ldo.c",
        "@lua//:src/ldo.h",
        "@lua//:src/ldump.c",
        "@lua//:src/lfunc.c",
        "@lua//:src/lfunc.h",
        "@lua//:src/lgc.c",
        "@lua//:src/lgc.h",
        "@lua//:src/linit.c",
        "@lua//:src/liolib.c",
        "@lua//:src/ljumptab.h",
        "@lua//:src/llex.c",
        "@lua//:src/llex.h",
        "@lua//:src/llimits.h",
        "@lua//:src/lmathlib.c",
        "@lua//:src/lmem.c",
        "@lua//:src/lmem.h",
        "@lua//:src/loadlib.c",
        "@lua//:src/lobject.c",
        "@lua//:src/lobject.h",
        "@lua//:src/lopcodes.c",
        "@lua//:src/lopcodes.h",
        "@lua//:src/lopnames.h",
        "@lua//:src/loslib.c",
        "@lua//:src/lparser.c",
        "@lua//:src/lparser.h",
        "@lua//:src/lprefix.h",
        "@lua//:src/lstate.c",
        "@lua//:src/lstate.h",
        "@lua//:src/lstring.c",
        "@lua//:src/lstring.h",
        "@lua//:src/lstrlib.c",
        "@lua//:src/ltable.c",
        "@lua//:src/ltable.h",
        "@lua//:src/ltablib.c",
        "@lua//:src/ltm.c",
        "@lua//:src/ltm.h",
        # "@lua//:src/lua.c",
        "@lua//:src/lua.h",
        "@lua//:src/lua.hpp",
        # "@lua//:src/luac.c",
        "@lua//:src/luaconf.h",
        "@lua//:src/lualib.h",
        "@lua//:src/lundump.c",
        "@lua//:src/lundump.h",
        "@lua//:src/lutf8lib.c",
        "@lua//:src/lvm.c",
        "@lua//:src/lvm.h",
        "@lua//:src/lzio.c",
        "@lua//:src/lzio.h",
    ],
    # defines = [
    #     LUA_CPATH_DEFAULT="foo"
    # ],
    strip_include_prefix = "/src",
    hdrs = [
        "@lua//:src/lauxlib.h",
        "@lua//:src/lprefix.h",
        "@lua//:src/lua.h",
        "@lua//:src/luaconf.h",
        "@lua//:src/lualib.h",
    ],
    linkopts = [
        "-lm",
        "-ldl",
    ],
    visibility = ["//visibility:public"],
)

################################################################
# make(
#     name = "lua",
#     args = [
#         # "local"
#         # "install", "macosx",
#         "INSTALL_TOP=external/lua/lua/lib"
#     ],
#     env = {
#         "PATH": "/usr/local/opt/coreutils/libexec/gnubin/:$PATH",
#         # "INSTALL_TOP": "lua/src"
#     },
#     targets = ["macosx", "install"],
#     # targets = select({
#     #     "@//bzl/host:linux": ["linus"],
#     #     "@//bzl/host:macos": ["macosx"],
#     # }),
#     lib_source = ":all",
#     # lib_name   = "src",
#     # out_bin_dir = "src",
#     # out_binaries = ["lua", "luac"],
#     out_lib_dir = ".",
#     out_static_libs = ["liblua.a"],
#     postfix_script = "\n".join([
#         "cd $EXT_BUILD_ROOT && ls -l",
#         "touch $EXT_BUILD_ROOT/external/lua/src/liblua.a",
#         # "cd -",
#         # "make local",
#         # "set -x",
#         # "echo PWD: `pwd`",
#         # "find ./ -name 'liblua.a'",
#         # "tree bazel-out",
#         # "cp external/lua/src/liblua.a bazel-out/daarwin-fastbuild/tool/obazl/lua/src"
#     ])
# )
