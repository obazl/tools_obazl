(:@ (:name "@")
    (:path /Users/gar/obazl/mibl/test/s7/inline_tests)
    (:exports
        (hash-table
          'ilt_backend ((:pkg . backend) (:tgt . ilt_backend))
          'orderbook3 ((:pkg . options) (:tgt . orderbook3))
          'ocxmr.orderbook3 ((:pkg . options) (:tgt . orderbook3))
          'ocxmr.make_orderbook3 ((:pkg . options) (:tgt . make_orderbook3))
          'make_orderbook3 ((:pkg . options) (:tgt . make_orderbook3))
          ':ilt_backend ((:pkg . backend) (:tgt . ilt_backend))
          ':orderbook3 ((:pkg . options) (:tgt . orderbook3))
          ':ocxmr.orderbook3 ((:pkg . options) (:tgt . orderbook3))
          'orderbook_test3 ((:pkg . options) (:tgt . orderbook_test3))
          ':lib:ocxmr.orderbook3 ((:lib . #t) (:pkg . options) (:tgt . orderbook3))
          'lib:ocxmr.orderbook3 ((:lib . #t) (:pkg . options) (:tgt . orderbook3))
          ':ocxmr.make_orderbook3 ((:pkg . options) (:tgt . make_orderbook3))
          ':make_orderbook3 ((:pkg . options) (:tgt . make_orderbook3))
          'lib:ocxmr.make_orderbook3 ((:lib . #t) (:pkg . options) (:tgt . make_orderbook3))
          ':lib:ocxmr.make_orderbook3 ((:lib . #t) (:pkg . options) (:tgt . make_orderbook3))
          ':orderbook_test3 ((:pkg . options) (:tgt . orderbook_test3))
          'ppx_assert_test_lib ((:pkg . ppx_assert/test) (:tgt . ppx_assert_test_lib))
          ':ppx_assert_test_lib ((:pkg . ppx_assert/test) (:tgt . ppx_assert_test_lib))))
    (:opam
        (hash-table
          'ocxmr ((:path . /Users/gar/obazl/mibl/test/s7/inline_tests) ("orderbook3" (:lib ("options" orderbook3)))
                   ("make_orderbook3"
                    (:lib ("options" make_orderbook3))))))
    (:shared-ppx
        (hash-table)) (:filegroups (hash-table))
    (:pkgs
        (hash-table
          '"ppx_assert/test" ((:ws-path "/Users/gar/obazl/mibl/test/s7/inline_tests") (:pkg-path "ppx_assert/test")
                               (:realpath "/Users/gar/obazl/mibl/test/s7/inline_tests/ppx_assert/test")
                               (dune (library (name ppx_assert_test_lib) (libraries sexplib str)
                                              (preprocess (pps ppx_compare ppx_sexp_conv ppx_here
                                                               ppx_assert ppx_inline_test))))
                               (:structures (:static (Ppx_assert_test . ppx_assert_test.ml)))
                               (:mibl (:ns-archive (:ns . ppx_assert_test_lib)
                                                   (:privname . ppx_assert_test_lib) (:ppx . 1)
                                                   (:deps (:resolved . 1))
                                                   (:manifest (:modules Ppx_assert_test)))
                                      (:shared-ppx ((1 (:manifest @ppx_compare//lib/ppx_compare
                                                                  @ppx_sexp_conv//lib/ppx_sexp_conv
                                                                  @ppx_here//lib/ppx_here
                                                                  @ppx_assert//lib/ppx_assert
                                                                  @ppx_inline_test//lib/ppx_inline_test)
                                                       (:args ("-inline-test-lib" "ppx_assert_test_lib")))))
                                      (:shared-deps ((1 @sexplib//lib/sexplib @ocaml//str)))))
          '"ppx_assert" ((:ws-path "/Users/gar/obazl/mibl/test/s7/inline_tests") (:pkg-path "ppx_assert")
                          (:realpath "/Users/gar/obazl/mibl/test/s7/inline_tests/ppx_assert")
                          (:cc-srcs (:static "ppx_assert_test.c")))
          '"backend" ((:ws-path "/Users/gar/obazl/mibl/test/s7/inline_tests") (:pkg-path "backend")
                       (:realpath "/Users/gar/obazl/mibl/test/s7/inline_tests/backend")
                       (:files (:static "PARSETREE.s7" "PKG.mibl" "PKG.s7" "WS.mibl" "WS.s7"))
                       (:structures (:static (A . a.ml) (B . b.ml)))
                       (dune (library (name ilt_backend) (libraries foo bar)
                                      (preprocess (pps ppx_jane))))
                       (:mibl (:ns-archive (:ns . ilt_backend) (:privname . ilt_backend) (:ppx . 1)
                                           (:deps (:resolved . 1)) (:manifest (:modules B A)))
                              (:shared-ppx ((1 (:manifest @ppx_jane//lib/ppx_jane))))
                              (:shared-deps ((1 @foo//lib/foo @bar//lib/bar)))))
          '"." ((:ws-path "/Users/gar/obazl/mibl/test/s7/inline_tests") (:pkg-path ".")
                 (:realpath
                  "/Users/gar/obazl/mibl/test/s7/inline_tests"))
          '"options" ((:ws-path "/Users/gar/obazl/mibl/test/s7/inline_tests") (:pkg-path "options")
                       (:realpath "/Users/gar/obazl/mibl/test/s7/inline_tests/options")
                       (dune (library (name orderbook3) (modules orderbook3)
                                      (public_name ocxmr.orderbook3)
                                      (libraries ocxmr.make_orderbook3 ocxmr.quote_include)
                                      (preprocess (pps ppx_jane ppx_sexp_conv)))
                             (library (name make_orderbook3)
                                      (modules make_orderbook3 orderbook_intf3)
                                      (public_name ocxmr.make_orderbook3)
                                      (libraries core ocxmr.price_comparator ocxmr.market_event)
                                      (preprocess (pps ppx_jane)))
                             (library (name orderbook_test3) (modules orderbook_test3)
                                      (libraries ocxmr.orderbook3) (inline_tests)
                                      (preprocess (pps ppx_jane))))
                       (:structures (:static (Make_orderbook . make_orderbook.ml)
                                             (Orderbook_intf . orderbook_intf.ml)
                                             (Orderbook_test . orderbook_test.ml)))
                       (:modules (Orderbook (:ml . orderbook.ml) (:mli . orderbook.mli)))
                       (:mibl (:ns-archive (:ns . orderbook3) (:privname . orderbook3)
                                           (:findlib-name . ocxmr.orderbook3) (:ppx . 1)
                                           (:deps (:resolved . 1)) (:manifest (:modules :FOOBAR)))
                              (:ns-archive (:ns . make_orderbook3) (:privname . make_orderbook3)
                                           (:findlib-name . ocxmr.make_orderbook3) (:ppx . 2)
                                           (:deps (:resolved . 2))
                                           (:manifest (:modules :FOOBAR :FOOBAR)))
                              (:ns-archive (:ns . orderbook_test3) (:privname . orderbook_test3)
                                           (:ppx . 3) (:deps (:resolved . 3))
                                           (:manifest (:modules :FOOBAR)))
                              (:shared-ppx ((1 (:manifest @ppx_jane//lib/ppx_jane @ppx_sexp_conv//lib/ppx_sexp_conv)) (2 (:manifest @ppx_jane//lib/ppx_jane))
                                             (3 (:manifest @ppx_jane//lib/ppx_jane)
                                                (:opts ("-inline-test-lib" . $LIBNAME))
                                                (:inline-tests #t))))
                              (:shared-deps ((1 //options:make_orderbook3 @ocxmr//lib/quote_include) (2 @core//lib/core @ocxmr//lib/price_comparator
                                                 @ocxmr//lib/market_event)
                                              (3 //options:orderbook3))))))))
