"(list (list :@ (list :name \"@\") (list :path '/Users/gar/obazl/tools_obazl/test/s7/deps/dyn) (list :exports (hash-table :dynsig.mli (list (cons :pkg ::wsroot) (cons :tgt :dynsig.mli)) :dynsig2.mli (list (cons :pkg ::wsroot) (cons :tgt :dynsig2.mli)) :dynstruct.ml (list (cons :pkg ::wsroot) (cons :tgt :dynstruct.ml)) :goodbye.ml (list (cons :pkg ::wsroot) (cons :tgt :goodbye.ml)))) (list :opam (hash-table)) (list :shared-ppx (hash-table)) (list :filegroups (hash-table)) (list :pkgs (hash-table ::wsroot (list (list :ws-path \"/Users/gar/obazl/tools_obazl/test/s7/deps/dyn\") (list :pkg-path ::wsroot) (list :realpath \"/Users/gar/obazl/tools_obazl/test/s7/deps/dyn\") (list 'dune (list 'rule (list 'target 'goodbye.ml) (list 'action (list 'write-file 'goodbye.ml \"let () = print_endline \\\\\\\"bye\\\\\\\"

let msg = \\\\\\\"bye-bye\\\\\\\"
\"))) (list 'rule (list 'target 'dynstruct.ml) (list 'action (list 'write-file 'dynstruct.ml \"let () = print_endline \\\\\\\"dynstruct\\\\\\\"

let dynstruct_msg = \\\\\\\"hi dyn\\\\\\\"\"))) (list 'rule (list 'target 'dynsig.mli) (list 'action (list 'write-file 'dynsig.mli \"val dynsig_msg: string\"))) (list 'rule (list 'target 'dynsig2.mli) (list 'action (list 'write-file 'dynsig2.mli \"val dynsig2_msg: string\")))) (list 'dune-project (list 'lang 'dune 3.0)) (list :modules (list 'Foo (cons :ml 'foo.ml) (cons :mli 'foo.mli)) (list 'Goodbye (cons :ml_ 'goodbye.ml) (cons :mli 'goodbye.mli))) (list :signatures (list :static (cons 'Staticsig 'staticsig.mli)) (list :dynamic (cons 'Dynsig 'dynsig.mli) (cons 'Dynsig2 'dynsig2.mli))) (list :structures (list :static (cons 'Hello 'hello.ml) (cons 'Mytest 'mytest.ml)) (list :dynamic (cons 'Dynstruct 'dynstruct.ml))) (list :opam \"mwe.opam\") (list :mibl (list :write-file (list :outputs (list :goodbye.ml (cons :pkg ::wsroot) (cons :tgt \"goodbye.ml\"))) (list :actions (list :cmd (list :tool :write-file) (list :args :goodbye.ml (list :content \"let () = print_endline \\\\\\\"bye\\\\\\\"

let msg = \\\\\\\"bye-bye\\\\\\\"
\"))))) (list :write-file (list :outputs (list :dynstruct.ml (cons :pkg ::wsroot) (cons :tgt \"dynstruct.ml\"))) (list :actions (list :cmd (list :tool :write-file) (list :args :dynstruct.ml (list :content \"let () = print_endline \\\\\\\"dynstruct\\\\\\\"

let dynstruct_msg = \\\\\\\"hi dyn\\\\\\\"\"))))) (list :write-file (list :outputs (list :dynsig.mli (cons :pkg ::wsroot) (cons :tgt \"dynsig.mli\"))) (list :actions (list :cmd (list :tool :write-file) (list :args :dynsig.mli (list :content \"val dynsig_msg: string\"))))) (list :write-file (list :outputs (list :dynsig2.mli (cons :pkg ::wsroot) (cons :tgt \"dynsig2.mli\"))) (list :actions (list :cmd (list :tool :write-file) (list :args :dynsig2.mli (list :content \"val dynsig2_msg: string\")))))))))))"