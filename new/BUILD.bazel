# load("@rules_cc//cc:defs.bzl", "cc_binary")

alias(
    name = "ws",
    actual = ":workspace"
)

##########
cc_binary(
    name  = "workspace",
    linkstatic = True,
    srcs  = [
        "workspace.c", "workspace.h",
        "xdg.c", "xdg.h",
        "utarray.h", "utstring.h", "uthash.h"
    ],
    defines = select({
        "//bzl/host:debug": ["DEBUG_TRACE"],
        "//conditions:default":   []
    }) + select({
        "//bzl/host:linux": ["_XOPEN_SOURCE=500"], # strdup
        "//conditions:default":   []
    }) + [
    ],
    copts = select({
        "//bzl/host:macos": ["-std=c11"],
        "//bzl/host:linux": ["-std=gnu11",
                             "-D_POSIX_C_SOURCE=200809L", ## strndup etc.
                             "-D_DEFAULT_SOURCE"], ## DT_* from dirent.h
        "//conditions:default": ["-std=c11"],
    }) + [
        "-x", "c",
        "-Wall",
        "-Wpedantic",
        "-Wno-unused-function",

        "-I.",
        "-Iobazl/new",
        "-I$(GENDIR)/new",
        "-I$(GENDIR)/external/obazl/new",

        "-I$(GENDIR)",

        "-I$(GENDIR)/runfiles",
        "-I$(GENDIR)/external/obazl/runfiles",

        # "-I$(GENDIR)/external/mibl/new",
        # "-I$(GENDIR)/external/mibl/src",

        # "-Iexternal/uthash/include",
        # "-Iexternal/libinih",
        # "-Iexternal/logc/src",

        # "-Iexternal/libs7/src",

        # "-Iexternal/uthash",
        # "-Iexternal/uthash/include",
    ],
    linkopts = select({
        "//bzl/host:macos": [],
        "//bzl/host:linux": [ "-Wl,-E", "-ldl"],
        "//conditions:default": {}
    }) + [
        "-lm",
        # "-lc_s7"
    ],
    data  = [
        "//new/templates:all",
        "//new/templates/xdg/bin:all",
        "//new/templates/xdg/data/queries:all",
        # "//new/templates/bzl/host:BUILD.bazel",
        # "//new/templates/bzl/profile:BUILD.bazel",
        "//man/man1:new_workspace.1",
    ],
    deps = [
        ":helper",
        "//runfiles",
        # "@uthash//:include"
    ],
    visibility = ["//visibility:public"]
)

##########
alias(
    name = "pkg",
    actual = ":package"
)

cc_binary(
    name  = "package",
    linkstatic = True,
    srcs  = [
        "package.c", "package.h",
        # "log.c", "log.h",  ## provided by libmibl.a
        # "@uthash//:include",
        "utarray.h", "utstring.h", "uthash.h"
    ],
    defines = select({
        "//bzl/host:debug": ["DEBUG_TRACE"],
        "//conditions:default":   []
    }) + select({
        "//bzl/host:linux": ["_XOPEN_SOURCE=500"], # strdup
        "//conditions:default":   []
    }) + [
        "WITH_C_LOADER"
    ],
    copts = select({
        "//bzl/host:macos": ["-std=c11"],
        "//bzl/host:linux": ["-std=gnu11",
                             "-D_POSIX_C_SOURCE=200809L", ## strndup etc.
                             "-D_DEFAULT_SOURCE"], ## DT_* from dirent.h
        "//conditions:default": ["-std=c11"],
    }) + [
        "-Wall",
        "-Wpedantic",
        "-Wno-unused-function",

        "-Inew",
        "-Iexternal/obazl/new",
        "-I$(GENDIR)/new",
        "-I$(GENDIR)/external/obazl/new",

        "-I$(GENDIR)/external/mibl/src",

        "-Iexternal/uthash/include",
        "-Iexternal/libinih",
        "-Iexternal/logc/src",

        # "-Iexternal/mibl/src",
        "-I$(GENDIR)/external/mibl/src", # mibl.h is generated
        "-Iexternal/libs7/src",
        "-Iexternal/libs7/vendored/linenoise",
        "-Iexternal/mibl/libs7/vendored/linenoise",
    ],
    linkopts = select({
        "//bzl/host:macos": [],
        "//bzl/host:linux": [ "-Wl,-E", "-ldl"],
        "//conditions:default": {}
    }) + [
        "-lm",
    ],
    data = [
        "//obazlark:srcs",
        "//obazlark/starlark:srcs",
        "//new/templates:all",
        # "//new/templates/bzl/host:BUILD.bazel",
        # "//new/templates/bzl/profile:BUILD.bazel",
        "//man/man1:new_workspace.1",
    ],
    deps = [
        ":helper",
        "//runfiles",
        "//vendored/logc",
        "@mibl//src:mibl",
        "@mibl//external/libinih:inih",
    ],
    visibility = ["//visibility:public"]
)

##########
cc_library(
    name  = "helper",
    linkstatic = True,
    srcs  = [
        "help.c",
        "log.c", "log.h",
        "utils.c"
    ],
    hdrs = [
        "help.h",
        "log.h",
        "utils.h",
        "utstring.h"
    ],
    defines = select({
        "//bzl/host:debug": ["DEBUG_TRACE"],
        "//conditions:default":   []
    }) + select({
        "//bzl/host:linux": ["_XOPEN_SOURCE=500"], # strdup
        "//conditions:default":   []
    }) + [
        "WITH_C_LOADER"
    ],
    copts = select({
        "//bzl/host:macos": ["-std=c11"],
        "//bzl/host:linux": ["-std=gnu11",
                             "-D_POSIX_C_SOURCE=200809L", ## strndup etc.
                             "-D_DEFAULT_SOURCE"], ## DT_* from dirent.h
        "//conditions:default": ["-std=c11"],
    }) + [
        "-Wall",
        "-Wpedantic",
        "-Wno-unused-function",

        "-Inew",
        "-I$(GENDIR)/new",
        "-I$(GENDIR)/external/obazl/new",
        # "-I$(GENDIR)/src",

        # "-I$(GENDIR)/external/mibl/new",
        # "-I$(GENDIR)/external/mibl/src",

        # "-Iexternal/uthash/include",
        # "-Iexternal/libinih",

        "-Iexternal/logc/src",

        # "-Iexternal/libs7/src",
    ],
    linkopts = select({
        "//bzl/host:macos": [],
        "//bzl/host:linux": [ "-Wl,-E", "-ldl"],
        "//conditions:default": {}
    }) + [
        "-lm",
        # "-lc_s7"
    ],
    data  = [
        "//new/templates:all",
        "//man/man1:new_workspace.1",
    ],
    deps = [
        # "@mibl//src:mibl",
        # "@mibl//external/libinih:inih",
        # "@logc//:logc",
        # "//external/libinih:inih",
        # "@libs7//src:s7",
        # "@libs7//src:c_s7",
        # "@libs7//vendored/linenoise",
    ],
    visibility = ["//visibility:public"]
)

########
genrule(
    name = "mkhdrs",
    srcs = [
        "package.c",
        "workspace.c",
        "utils.c",
        "help.c",
        "xdg.c",

        "ansi_colors.h",
        # "test.c",
        # "//runfiles:runfiles.c",
    ],
    outs = [
        "package.h",
        "workspace.h",
        "utils.h",
        "help.h",
        "xdg.h",
        # "test.h"
    ],
    cmd = "\n".join([
        "$(execpath //vendored/makeheaders) $(SRCS);",
        "cp `dirname $(location help.c)`/*.h $(RULEDIR)",
    ]),
    tools = ["//vendored/makeheaders"],
    visibility = ["//visibility:public"]
)

################################################################
cc_test(
    name  = "test",
    srcs  = [
        "test.c", "test.h",
        # "runfiles.h",
        "log.c", "log.h",
        "utstring.h"
    ],
    defines = select({
        "//bzl/host:debug": ["DEBUG_TRACE"],
        "//conditions:default":   []
    }) + select({
        "//bzl/host:linux": ["_XOPEN_SOURCE=500"], # strdup
        "//conditions:default":   []
    }) + [
        "WITH_C_LOADER"
    ],
    copts = select({
        "//bzl/host:macos": ["-std=c11"],
        "//bzl/host:linux": ["-std=gnu11",
                             "-D_POSIX_C_SOURCE=200809L", ## strndup etc.
                             "-D_DEFAULT_SOURCE"], ## DT_* from dirent.h

        "//conditions:default": ["-std=c11"],
    }) + [
        "-Wall",
        "-Wpedantic",
        "-Wno-unused-function",

        "-I$(GENDIR)/new",
        "-I$(GENDIR)/external/obazl/new",

        "-I$(GENDIR)/runfiles",
        "-I$(GENDIR)/external/obazl/runfiles",

        "-Ivendored/unity",
        "-Iexternal/obazl/vendored/unity",
   ],
    linkopts = select({
        "//bzl/host:macos": [],
        "//bzl/host:linux": [ "-Wl,-E", "-ldl"],
        "//conditions:default": {}
    }) + [
        # "-l",
    ],
    data  = [
        "//new/templates:all",
        "//new/templates/xdg/data/queries:all",
    ],
    deps = [
        "//runfiles",
        "//vendored/unity",
    ],
    visibility = ["//visibility:public"]
)
