load("@makeheaders//rules:makeheaders.bzl", "makeheaders")

load("//cfg/cc:CONFIG.bzl",
     COPTS   = "BASE_COPTS",
     _LOCAL_DEFINES = "BASE_LOCAL_DEFINES")

LOCAL_DEFINES = _LOCAL_DEFINES + [
    "BAZEL_CURRENT_REPOSITORY=\\\"{}\\\"".format(
        repo_name())
        # native.package_relative_label("@tools_obazl").repo_name
]

##########
# mymacro(
#     name  = "here",
#     # expands to new, with args = ["--here"]
# )

cc_binary(
    name  = "new",
    # args = ["--here"], # write to current dir
    linkstatic = True,
    includes = ["."],
    srcs  = [
        "new.c",
        "help.c",
        ":mkhdrs"
    ],
    local_defines = [
        "BAZEL_CURRENT_REPOSITORY=\\\"{}\\\"".format(package_relative_label("@tools_obazl").repo_name)
    ],
    defines = select({
        "//bzl/host:debug": ["DEBUG_TRACE"],
        "//conditions:default":   []
    }) + select({
        "//bzl/host:linux": ["_XOPEN_SOURCE=500"], # strdup
        "//conditions:default":   []
    }) + [
    ],
    copts = COPTS + select({
        "//bzl/host:macos": ["-std=c11"],
        "//bzl/host:linux": ["-std=gnu11",
                             "-D_POSIX_C_SOURCE=200809L", ## strndup etc.
                             "-D_DEFAULT_SOURCE"], ## DT_* from dirent.h
        "//conditions:default": ["-std=c11"],
    }),
    linkopts = select({
        "//bzl/host:macos": [],
        "//bzl/host:linux": [ "-Wl,-E", "-ldl"],
        "//conditions:default": {}
    }) + [
        # "-lm",
        # "-lc_s7"
    ],
    data  = [
        "//templates",
        "//man/man1:new_workspace.1",
    ],
    deps = [
        "@cwalk//lib:cwalk",
        "@gopt//lib:gopt",
        "@mustachios//adapter/json/cjson:mustache_json",
        "@mustachios//lib:mustachios",
        "@obazl_cc//lib:spawn_cmd",
        "@runfiles//lib:runfiles",
        "//src/utils",
    ],
    visibility = ["//visibility:public"]
)

########
cc_test(
    name  = "test",
    srcs  = [
        "test.c", "test.h",
        "log.c", "log.h",
        "utstring.h"
    ],
    defines = select({
        "//bzl/host:debug": ["DEBUG_TRACE"],
        "//conditions:default":   []
    }) + select({
        "//bzl/host:linux": ["_XOPEN_SOURCE=500"], # strdup
        "//conditions:default":   []
    }) + [
        "WITH_C_LOADER"
    ],
    copts = select({
        "//bzl/host:macos": ["-std=c11"],
        "//bzl/host:linux": ["-std=gnu11",
                             "-D_POSIX_C_SOURCE=200809L", ## strndup etc.
                             "-D_DEFAULT_SOURCE"], ## DT_* from dirent.h

        "//conditions:default": ["-std=c11"],
    }) + [
        "-Wall",
        "-Wpedantic",
        "-Wno-unused-function",

        "-I$(GENDIR)/new",
        "-I$(GENDIR)/external/obazl/new",

        # "-I$(GENDIR)/runfiles",
        # "-I$(GENDIR)/external/obazl/runfiles",

        "-Ivendored/unity",
        "-Iexternal/obazl/vendored/unity",
   ],
    linkopts = select({
        "//bzl/host:macos": [],
        "//bzl/host:linux": [ "-Wl,-E", "-ldl"],
        "//conditions:default": {}
    }) + [
        # "-l",
    ],
    data  = [
        "//new/templates:all",
        "//new/templates/xdg/data/queries:all",
    ],
    deps = [
        "//vendored/unity",
    ],
    visibility = ["//visibility:public"]
)

############
makeheaders(
    name = "mkhdrs",
    hdrs_srcs = [
        "new.c",
        "help.c",
        "//src/utils:utils.c",
    ],
    additional_srcs = [
        "@liblogc//macros:ansi_colors.h"
    ] + select({
        "@obazl_cc//profile:dev?": [
            "@liblogc//macros:logging_debug.h"
        ],
        # special case: built as tool, transitioned to opt
        # "@makeheaders//compilation_mode:opt": [
        #     "@liblogc//macros:logging_debug.h"
        # ],
        "//conditions:default": [
            "@liblogc//macros:logging_ndebug.h"
        ]
    })
)

