load("@rules_cc//cc:defs.bzl", "cc_library")

exports_files(["bazel_config.c"])

##########
cc_library(
    name  = "bazel",
    linkstatic = 1,
    srcs  = [
        "bazel_config.c",
        "//vendored/logc:log.h",
        "@uthash//:include",
    ],
    hdrs = ["bazel_config.h"],
    copts = select({
        "//bzl/host:macos": ["-std=c11"],
        "//bzl/host:linux": ["-std=gnu11"],
        "//conditions:default": ["-std=c11"],
    }) + [
        "-g", "-O0",
        "-pedantic-errors",

        "-I", "$(GENDIR)/bazel",
        "-I", "$(GENDIR)/external/obazl/bazel",

        # "-I", "vendored/uthash",
        # "-I", "external/sealark/vendored/uthash",
        "-I", "external/uthash/include",

        "-I", "vendored/logc",
        "-I", "external/obazl/vendored/logc",
    ],
    deps = [
        "//vendored/logc",
        # "//vendored/uthash"
    ],
    visibility = ["//visibility:public"]
)

########
genrule(
    name = "mkhdrs",
    srcs = [
        "bazel_config.c",
        # "//vendored/uthash:utarray.h",
        # "//vendored/uthash:utstring.h",
        "@uthash//:include"
    ],
    outs = [
        "bazel_config.h"
    ],
    cmd = "\n".join([
        "SRC1=$(location bazel_config.c)",
        "SRCDIR1=`dirname $$SRC1`",
        # "SRC2=$(location //vendored/uthash/utarray.h)",
        # "SRCDIR2=`dirname $$SRC2`",
        "$(location //vendored/makeheaders) \\",
        # "    $(locations //vendored/uthash:utarray.h) \\",
        # "    $(locations //vendored/uthash:utstring.h) \\",
        "    $(location bazel_config.c) ",
        "cp $${SRCDIR1}/*.h $(@D)",
    ]),
    tools = ["//vendored/makeheaders"],
    visibility = ["//visibility:public"]
)
