# load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
# load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

load("//:WORKSPACE.bzl", "fetch_repos")
fetch_repos()

load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")
bazel_skylib_workspace()

load("@rules_ocaml//:WORKSPACE.bzl", "fetch_repos")
fetch_repos()

load("@opam//:WORKSPACE.bzl", "opam_fetch_repos")
opam_fetch_repos()

load("@libs7//:WORKSPACE.bzl", libs7_fetch_repos = "cc_fetch_repos")
libs7_fetch_repos()

load("@mibl//:WORKSPACE.bzl", mibl_fetch_repos = "cc_fetch_repos")
mibl_fetch_repos()

load("@rules_foreign_cc//foreign_cc:repositories.bzl",
     "rules_foreign_cc_dependencies")
## Assumption: build tools (make, autoconf, etc.) are already
## installed, do not build them
# rules_foreign_cc_dependencies()
rules_foreign_cc_dependencies(register_built_tools=False)

################ rules_jsoo etc. ################
load("@rules_jsoo//:WORKSPACE.bzl", jsoo_fetch_repos = "fetch_repos")
jsoo_fetch_repos()

load("@aspect_rules_js//js:repositories.bzl", "rules_js_dependencies")
rules_js_dependencies()

load("@rules_nodejs//nodejs:repositories.bzl",
     "DEFAULT_NODE_VERSION",
     "nodejs_register_toolchains")

nodejs_register_toolchains(
    name = "nodejs",
    node_version = DEFAULT_NODE_VERSION,
)

# load("@aspect_rules_js//npm:npm_import.bzl", "npm_translate_lock")
# npm_translate_lock(
#     name = "npm",
#     bins = {
#         # derived from "bin" attribute in node_modules/typescript/package.json
#         "typescript": {
#             "tsc": "./bin/tsc",
#             "tsserver": "./bin/tsserver",
#         },
#     },
#     pnpm_lock = "//:pnpm-lock.yaml",
#     verify_node_modules_ignored = "//:.bazelignore",
# )
# load("@npm//:repositories.bzl", "npm_repositories")
# npm_repositories()

## end of jsoo deps

load(":WORKSPACE.opam.bzl", "bootstrap")
bootstrap()
